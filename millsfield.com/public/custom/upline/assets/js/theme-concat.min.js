const form = document.querySelectorAll("form"), nameField = document.querySelector("input[name=name]"),
  email = document.querySelector("input[name=email]"), phone = document.querySelector("input[name=phone]"),
  btnSubmit = document.querySelector(".btn-submit");

function setErrorFor(e, t) {
  const n = e.parentElement, s = n.querySelector(".errors");
  n.className = "form__field error", s.textContent = t
}

function setSuccessFor(e) {
  const t = e.parentElement, n = t.querySelector(".errors");
  t.className = "form__field success", n.textContent = ""
}

function checkInputs() {
  var e = nameField.value.trim(), t = email.value.trim();
  return /^[a-zA-Zа-яА-Я'][a-zA-Zа-яА-Я-']+[a-zA-Zа-яА-Я']{3,16}?/.test(e) && "" !== e ? (setSuccessFor(nameField), /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(t) && "" !== t ? (setSuccessFor(email), !0) : (setErrorFor(email, "Not a valid email"), !1)) : (setErrorFor(nameField, "Not a valid name"), !1)
}

function serialize(e) {
  if (!e || "FORM" !== e.nodeName) return !1;
  let t, n, s = [];
  for (t = e.elements.length - 1; 0 <= t; t -= 1) if ("" !== e.elements[t].name) switch (e.elements[t].nodeName) {
    case"INPUT":
      switch (e.elements[t].type) {
        case"text":
        case"tel":
        case"email":
        case"hidden":
        case"password":
        case"button":
        case"reset":
        case"submit":
          s.push(e.elements[t].name + "=" + encodeURIComponent(e.elements[t].value));
          break;
        case"checkbox":
        case"radio":
          e.elements[t].checked && s.push(e.elements[t].name + "=" + encodeURIComponent(e.elements[t].value))
      }
      break;
    case"file":
      break;
    case"TEXTAREA":
      s.push(e.elements[t].name + "=" + encodeURIComponent(e.elements[t].value));
      break;
    case"SELECT":
      switch (e.elements[t].type) {
        case"select-one":
          s.push(e.elements[t].name + "=" + encodeURIComponent(e.elements[t].value));
          break;
        case"select-multiple":
          for (n = e.elements[t].options.length - 1; 0 <= n; n -= 1) e.elements[t].options[n].selected && s.push(e.elements[t].name + "=" + encodeURIComponent(e.elements[t].options[n].value))
      }
      break;
    case"BUTTON":
      switch (e.elements[t].type) {
        case"reset":
        case"submit":
        case"button":
          s.push(e.elements[t].name + "=" + encodeURIComponent(e.elements[t].value))
      }
  }
  return s.join("&")
}

form.forEach(e => {
  e.addEventListener("submit", e => {
    e.preventDefault();
    e = checkInputs();
    e && (console.log(e), console.log(serialize(form)))
  })
});
const canvas = document.querySelectorAll(".graph-c"), ctx = canvas[0].getContext("2d"),
  gradient = ctx.createLinearGradient(0, 0, 0, 534);
gradient.addColorStop(0, "#395B89"), gradient.addColorStop(.5, "#F2F4F6"), gradient.addColorStop(1, "#F2F4F6"), ctx.strokeStyle = "black", ctx.lineWidth = "1", ctx.moveTo(0, 233.8), ctx.lineTo(10, 220.54), ctx.lineTo(26, 236.22), ctx.lineTo(50, 214), ctx.lineTo(63, 219), ctx.lineTo(78, 202), ctx.lineTo(85, 169.2), ctx.lineTo(107, 169.2), ctx.lineTo(117, 140.9), ctx.lineTo(130, 157), ctx.lineTo(141, 151.5), ctx.lineTo(150, 160.7), ctx.lineTo(168, 95), ctx.lineTo(183, 78), ctx.lineTo(208, 94), ctx.lineTo(222, 87), ctx.lineTo(230, 94), ctx.lineTo(243, 94), ctx.lineTo(257, 82), ctx.lineTo(276, 75), ctx.lineTo(285, 57), ctx.lineTo(295, 51), ctx.lineTo(320, 74), ctx.lineTo(342, 59), ctx.lineTo(355, 67), ctx.lineTo(366, 56), ctx.lineTo(380, 55), ctx.lineTo(388, 65), ctx.lineTo(400, 47), ctx.lineTo(408, 67), ctx.lineTo(420, 77), ctx.lineTo(431, 77), ctx.lineTo(446, 58), ctx.lineTo(455, 64), ctx.lineTo(466, 50), ctx.lineTo(476, 54), ctx.lineTo(488, 50.8), ctx.lineTo(502, 59), ctx.lineTo(518, 42), ctx.lineTo(534, 2), ctx.lineTo(534, 266), ctx.lineTo(0, 266), ctx.lineTo(0, 233.8), ctx.stroke(), ctx.fillStyle = gradient, ctx.fill();
const divRes = document.querySelector(".graph-result"), divCrossroad = document.querySelector(".graph-crossroad");
if (canvas.forEach(e => {
  e.addEventListener("mousedown", function (e) {
    let o = 8.04841;
    screen.width < 860 && (o = 4.114977);
    var l = e.layerY;
    divRes.innerHTML = (33.05 - l / o).toFixed(1) + "%", divRes.style.display = "block", 100 < e.layerX ? divRes.style.left = e.layerX - 85 + "px" : divRes.style.left = e.layerX + 25 + "px", 70 < e.layerY ? divRes.style.top = e.layerY - 50 + "px" : divRes.style.top = e.layerY + 25 + "px", divCrossroad.style.display = "block", divCrossroad.style.top = e.layerY + "px", divCrossroad.style.left = e.layerX + "px"
  })
}), canvas[1]) {
  const e = canvas[1].getContext("2d"), f = e.createLinearGradient(0, 0, 0, 534);
  f.addColorStop(0, "#395B89"), f.addColorStop(.5, "#F2F4F6"), f.addColorStop(1, "#F2F4F6"), e.strokeStyle = "black", e.lineWidth = "1", e.moveTo(0, 212), e.lineTo(26, 225), e.lineTo(44, 223.5), e.lineTo(60, 250), e.lineTo(71, 205), e.lineTo(89, 209), e.lineTo(105, 184), e.lineTo(120, 141), e.lineTo(148, 148), e.lineTo(162, 175), e.lineTo(192, 140), e.lineTo(230, 114), e.lineTo(240, 110), e.lineTo(256, 89), e.lineTo(325, 89), e.lineTo(342, 56), e.lineTo(357, 51), e.lineTo(375, 70), e.lineTo(390, 62), e.lineTo(400, 71), e.lineTo(465, 54), e.lineTo(479, 66), e.lineTo(491, 25), e.lineTo(511, 11), e.lineTo(527, 6), e.lineTo(534, 11), e.lineTo(534, 266), e.lineTo(0, 266), e.lineTo(0, 233.8), e.stroke(), e.fillStyle = f, e.fill()
}
!function (l) {
  window.lightGallery = function (t, i) {
    l(t).find(i).each(function () {
      l(this).attr("data-sub-html", l(this).find("img").attr("title"))
    }), l(t).lightGallery({selector: i, download: !1, fullScreen: !1, zoom: !1, share: !1, thumbnail: !0})
  }
}(jQuery);
document.addEventListener("DOMContentLoaded", () => {
  const t = document.getElementsByClassName("pushmenu"), o = document.querySelector(".hidden-overley"),
    e = document.querySelectorAll(".nav__item");
  o.addEventListener("click", e => {
    for (e.currentTarget.classList.toggle("show"), document.querySelector(".nav").classList.toggle("show"), document.querySelector("body").classList.toggle("nav-opened"), i = 0; i < t.length; i++) t[i].classList.toggle("open")
  }), e.forEach(e => {
    e.addEventListener("click", () => {
      for (o.classList.toggle("show"), document.querySelector(".nav").classList.toggle("show"), document.querySelector("body").classList.toggle("nav-opened"), i = 0; i < t.length; i++) t[i].classList.toggle("open")
    })
  });

  function s() {
    document.querySelector(".pushmenu").classList.toggle("open"), document.querySelector(".nav").classList.toggle("show"), document.querySelector(".hidden-overley").classList.toggle("show"), document.body.classList.toggle("nav-opened")
  }

  for (i = 0; i < t.length; i++) t[i].addEventListener("click", s, !1)
});

function validateEmail(e) {
  return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)
}

function validatePhone(e) {
  return /^([+]?[0-9\s-\(\)]{3,25})*$/i.test(e)
}

const width = window.innerWidth;
if (width < 1200) {
  const e = new Swiper(".articles__slider", {
    loop: !1,
    loopedSlides: null,
    slidesPerView: "auto",
    breakpoints: {1200: {slidesPerView: 4}}
  })
}
!function (n) {
  n(document).ready(function () {
    n(window).scroll(function () {
      var e = n(window).scrollTop() + 100;
      n("section").filter(function () {
        return e <= n(this).offset().top + n(this).height()
      });
      100 < n(window).scrollTop() ? n(".header").addClass("headerScroll") : n(window).scrollTop() < 100 && n(".header").removeClass("headerScroll")
    });
    var e = n(".tabs2__content");
    e.hide().filter(":first").show(), n(".tabs2__btn").click(function () {
      return e.hide(), e.filter(this.hash).show(), n(".tabs2__btn").removeClass("is-active"), n(this).addClass("is-active"), !1
    }).filter(":first").click(), n(".tab-link").click(function () {
      var e = n(this).attr("data-tab"), e = n('.tab-content[data-tab="' + e + '"]');
      n(".tab-link.active").removeClass("active"), n(this).addClass("active"), n(".tab-content.active").removeClass("active"), e.addClass("active")
    }), n(".tabs__nav").click(function (e) {
      e.preventDefault(), n(this).hasClass("is-active") ? (n(this).removeClass("is-active"), n(this).parent().find(".tabs__content").slideUp(300)) : (n(this).toggleClass("is-active"), n(this).parent().find(".tabs__content").slideToggle(300))
    }), n(".callModal-1").fancybox({
      fixed: !1,
      autoCenter: !0,
      fitToView: !1,
      autoFocus: false,
      autoSize: !0,
      closeClick: !1,
      openEffect: "none",
      closeEffect: "none"
    }), n(".call-privacy-policy").fancybox({
      fixed: !1,
      autoCenter: !0,
      fitToView: !1,
      autoSize: !0,
      closeClick: !1,
      openEffect: "none",
      closeEffect: "none"
    }), n("input.phone").inputmask("+7 (999) 999-9999"), n("input").on("focus", function () {
      n(this).hasClass("error") && n(this).removeClass("error")
    }), n("form").on("submit", function (e) {
      e.preventDefault();
      var t = n(this), i = (t.find("input.name").val(), t.find("input.phone").val()),
        e = validateEmail(t.find("input.email").val()), i = validatePhone(i);
      0 == e ? t.find("input.email").addClass("error") : 1 == e && t.find("input.email").removeClass("error"), 0 == i ? t.find("input.phone").addClass("error") : 1 == i && t.find("input.phone").removeClass("error"), 1 == e && 1 == i && n.ajax({
        type: "POST",
        url: "sendmail.php",
        data: t.serialize(),
        success: function () {
          n.fancybox.close(), n.fancybox.open({src: ".modal-success", type: "inline"}), setTimeout(function () {
            n.fancybox.close()
          }, 3e3)
        }
      })
    })
  })
}(jQuery);
